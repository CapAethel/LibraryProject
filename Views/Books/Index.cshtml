@model IEnumerable<Book>

@{
    ViewData["Title"] = "Index";
    var userRoleId = (int)ViewData["UserRoleId"];
    var titleSortParam = ViewData["TitleSortParam"] as string;
    var authorSortParam = ViewData["AuthorSortParam"] as string;
    var categorySortParam = ViewData["CategorySortParam"] as string;
}

<h1>Books</h1>
<form method="get" asp-controller="Books" asp-action="Index" style="margin-bottom: 15px;">
    <div class="form-group">
        <label for="filterField">Select filter field:</label>
        <select id="filterField" name="filterField" class="form-control">
            <option value="">None</option>
            <option value="Title">Title</option>
            <option value="Author">Author</option>
            <option value="Category">Category</option>
        </select>
    </div>

    <div class="form-group" id="TitleGroup" style="display:none;">
        <label for="Title">Enter Title:</label>
        <input type="text" id="TitleInput" name="searchString" class="form-control" placeholder="Enter Title" />
    </div>

    <div class="form-group" id="AuthorCriteriaGroup" style="display:none;">
        <label for="Author">Enter Author:</label>
        <input type="text" id="AuthorInput" name="searchAuthor" class="form-control" placeholder="Enter Author" />
    </div>

    <div class="form-group" id="CategoryCriteriaGroup" style="display:none;">
        <label for="CategoryCriteria">Select Category:</label>
        <select id="CategoryCriteria" name="searchCategory" class="form-control">
            <option value="">Select a Category</option>
            @if (ViewBag.Categories != null)
            {
                foreach (var category in ViewBag.Categories)
                {
                    <option value="@category.CategoryName">@category.CategoryName</option>
                }
            }
        </select>
    </div>

    <button type="submit" class="btn btn-primary" id="filterButton" style="display:none;">Filter</button>
</form>


@if(userRoleId == 2)
{
    <p>
        <a class="btn btn-primary mb-3" asp-action="Create">Create New</a>
    </p>

    <table class="table">
        <thead>
            <tr>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@titleSortParam">
                        @Html.DisplayNameFor(model => model.Title)
                    </a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@authorSortParam">
                        @Html.DisplayNameFor(model => model.Author)
                    </a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@categorySortParam">
                        @Html.DisplayNameFor(model => model.Category.CategoryName)
                    </a>
                </th>
                <th>
                    <a asp-action="Index">
                        @Html.DisplayNameFor(model => model.Quantity)
                    </a>
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Author)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category.CategoryName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Quantity)
                    </td>
                    <td>
                        <a class="btn btn-warning btn-sm" asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a class="btn btn-danger btn-sm" asp-action="Delete" asp-route-id="@item.Id">Delete</a> |
                        <a class="btn btn-info btn-sm" asp-action="Details" asp-route-id="@item.Id">Details</a> 
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="text-center mt-4">
        <a href="@Url.Action("Index", "Books")" class="btn btn-secondary">Return to Full List</a>
    </div>
}
else
{
    <div class="row">
        @foreach (var item in Model)
        {
            <div class="col-md-3">
                <div class="card mb-4 shadow-sm">
                    <a asp-controller="Orders" asp-action="BookDetails" asp-route-id="@item.Id">
                        <img class="card-img-top" src="@item.PictureUrl" alt="@item.Title" style="height: 300px; object-fit: cover;">
                    </a>
                    <div class="card-body text-center">
                        <h5 class="card-title">@item.Title</h5>
                        <h7 class="card-title" style="color: gray;">Remaining stock: @item.Quantity</h7>
                    </div>
                </div>
            </div>
        }
    </div>

    <style>
        .card-img-top {
            transition: transform 0.2s ease-in-out;
        }

        .card-img-top:hover {
            transform: scale(1.1);
        }
    </style>
}

<script>
    document.getElementById('filterField').addEventListener('change', function () {
        var TitleGroup = document.getElementById('TitleGroup');
        var AuthorCriteriaGroup = document.getElementById('AuthorCriteriaGroup');
        var CategoryCriteriaGroup = document.getElementById('CategoryCriteriaGroup');
        var filterButton = document.getElementById('filterButton');

        // Hide all input groups and buttons initially
        TitleGroup.style.display = 'none';
        AuthorCriteriaGroup.style.display = 'none';
        CategoryCriteriaGroup.style.display = 'none';
        filterButton.style.display = 'none';

        // Show the appropriate input group and buttons based on selection
        switch (this.value) {
            case 'Title':
                TitleGroup.style.display = 'block';
                filterButton.style.display = 'block';
                resetButton.style.display = 'block';
                break;
            case 'Author':
                AuthorCriteriaGroup.style.display = 'block';
                filterButton.style.display = 'block';
                resetButton.style.display = 'block';
                break;
            case 'Category':
                CategoryCriteriaGroup.style.display = 'block';
                filterButton.style.display = 'block';
                resetButton.style.display = 'block';
                break;
        }
    });

    // Trigger the change event to initialize the form based on the current selection
    document.getElementById('filterField').dispatchEvent(new Event('change'));

</script>
