@model LibraryProject.Models.Book

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Book</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" style="margin-bottom: 15px;">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <!-- Existing form fields -->
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Author" class="control-label"></label>
                <input asp-for="Author" class="form-control" />
                <span asp-validation-for="Author" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="CategoryId" class="control-label">Category</label>
                <select asp-for="CategoryId" class="form-control" asp-items="ViewBag.CategoryId" id="CategorySelect">
                    <option value="">-- Select Category --</option>
                    <option value="create-new">Create New Category</option>
                </select>
                <span asp-validation-for="CategoryId" class="text-danger"></span>
            </div>

            <!-- New Category Form -->
            <div id="newCategoryForm" style="display: none;">
                <div class="form-group">
                    <label for="NewCategoryName">Category Name</label>
                    <input type="text" id="NewCategoryName" class="form-control" />
                </div>
                <div class="form-group">
                    <button type="button" id="saveCategoryBtn" class="btn btn-primary">Save New Category</button>
                </div>
            </div>

            <div class="form-group">
                <label asp-for="BookDescription" class="control-label"></label>
                <input asp-for="BookDescription" class="form-control" />
                <span asp-validation-for="BookDescription" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="PictureUrl" class="control-label"></label>
                <input asp-for="PictureUrl" class="form-control" />
                <span asp-validation-for="PictureUrl" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" class="form-control" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.getElementById('CategorySelect').addEventListener('change', function () {
            if (this.value === 'create-new') {
                document.getElementById('newCategoryForm').style.display = 'block';
            } else {
                document.getElementById('newCategoryForm').style.display = 'none';
            }
        });

        document.getElementById('saveCategoryBtn').addEventListener('click', function () {
            var categoryName = document.getElementById('NewCategoryName').value;
            if (categoryName) {
                fetch('@Url.Action("CreateCategory", "Books")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({ categoryName: categoryName })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            var select = document.getElementById('CategorySelect');
                            var option = document.createElement('option');
                            option.value = data.categoryId;
                            option.text = categoryName;
                            select.add(option);
                            select.value = data.categoryId;
                            document.getElementById('newCategoryForm').style.display = 'none';
                        } else {
                            alert('Failed to save category. Please try again.');
                        }
                    });
            }
        });
    </script>
}